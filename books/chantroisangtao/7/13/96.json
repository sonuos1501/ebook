{
    "pageNumber": 96,
    "pageText": "Ví dụ, chương trình ở Hình 1 không hoạt động là do  <img src=\"./green button.png\"> không phải là câu lệnh trong Scratch, không lắp ghép được với câu lệnh  <img src=\"./orange button.png\"> (do không có khớp nối).\n\nHầu hết các ngôn ngữ lập trình đều cung cấp công cụ phát hiện lỗi cú pháp. Trong ngôn ngữ lập trình trực quan, ví dụ như Scratch, còn giúp hạn chế những tình huống gây ra lỗi cú pháp. \n\n– Lỗi logic: là lỗi xảy ra trong trường hợp chương trình hoạt động nhưng đưa ra kết quả sai.\n\nVí dụ, chương trình ở Hình 2 đưa ra kết quả sai khi nhập giá trị a, b bằng nhau. Nguyên nhân là khi phép so sánh a > b cho kết quả là đúng thì chương trình thông báo a lớn hơn b; khi phép so sánh a > b cho kết quả là sai thì thông báo a nhỏ hơn b. Tuy nhiên, a = b cũng thuộc trường hợp phép so sánh a > b cho kết quả là sai nên chương trình đưa ra thông báo sai khi nhập cặp số a, b bằng nhau.\n\nThực hiện chương trình với các bộ dữ liệu cụ thể (còn gọi là bộ dữ liệu thử hay bộ test) là cách thường được sử dụng để phát hiện lỗi logic trong chương trình. Các bộ dữ liệu thử cần được xây dựng để kiểm thử các tình huống có thể xảy ra khi đưa chương trình vào sử dụng.\n\n**Tìm hiểu và đề xuất bộ dữ liệu thử để phát hiện lỗi chương trình ở Hình 4. Theo em lỗi chương trình ở Hình 4 thuộc loại nào?**\n\n• Lỗi cú pháp là lỗi do viết chương trình, câu lệnh sai cú pháp dẫn đến chương trình không hoạt động. Hầu hết các ngôn ngữ lập trình đều có công cụ hỗ trợ hạn chế, phát hiện lỗi cú pháp.\n\n• Lỗi logic là lỗi xảy ra trong trường hợp chương trình hoạt động nhưng đưa ra kết quả sai. Sử dụng bộ dữ thử là cách thường được sử dụng để phát hiện lỗi logic trong chương trình.\n\n## 2. Gỡ lỗi\n<img src=\"./magnifying glass.png\"> \n\nSau khi phát hiện lỗi, ta cần tìm câu lệnh, cấu trúc điều khiển gây ra lỗi, nguyên nhân gây ra lỗi và sửa lỗi chương trình (còn được gọi là gỡ lỗi).\n\n**Tìm lỗi**\n\nViệc xác định câu lệnh, cấu trúc điều khiển sai cú pháp thường được thực hiện dễ dàng nhờ vào các công cụ hỗ trợ lập trình. Tuy nhiên, với lỗi logic, việc này không phải lúc nào cũng dễ dàng. Dưới đây là một số lưu ý trong việc xác định vị trí, nguyên nhân gây lỗi logic:\n\n- Cần tập trung xem xét câu lệnh trực tiếp tạo ra lỗi và những câu lệnh, cấu trúc điều khiển có liên quan logic đến lỗi. Ví dụ, trong chương trình ở Hình 2, câu lệnh  <img src=\"./blue button.png\">   trực tiếp tạo ra lỗi ở Hình 3 và cấu trúc if - then - else có liên quan logic đến lỗi.\n\n- Xem xét kĩ lưỡng, cụ thể hoạt động của câu lệnh, cấu trúc điều khiển này trong tình huống phát sinh lỗi. Ví dụ, xem xét hoạt động của câu lệnh  <img src=\"./blue button.png\"> và cấu trúc if - then - else trong tình huống a = 5, b = 5 (tình huống dẫn đến chương trình ở Hình 2 phát sinh lỗi). \n"
}